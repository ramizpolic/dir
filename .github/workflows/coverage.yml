name: Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  coverage:
    name: Go Coverage (multi-module)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: api/go.mod
          cache: true

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Cache Go build & mod
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run per-module coverage task
        run: task test:unit:coverage:html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: |
            coverage-api.out
            coverage-client.out
            coverage-server.out
            coverage-cli.out
          flags: per-module
          fail_ci_if_error: false
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload HTML reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: |
            coverage-*.html
            coverage-summary.txt
            coverage-*.func.txt
            coverage-*.out

      - name: PR Comment summary
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          recreate: true
          path: coverage-summary.txt
