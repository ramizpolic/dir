# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

name: Test E2E

on:
  workflow_call:
    inputs:
      image_repo:
        required: true
        type: string
        description: 'Image repo to use.'
      image_tag:
        required: true
        type: string
        description: 'Image tag to use.'
      taskfile-task:
        required: false
        default: "test:e2e"
        type: string
        description: 'Taskfile task to run'

jobs:
  e2e:
    name: E2E
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Login to ghcr.io
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: notused
          password: ${{ secrets.GITHUB_TOKEN  }}

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          check-latest: true
          cache-dependency-path: "**/*.sum"

      - name: Download artifacts
        uses: actions/download-artifact@v4.1.9
        with:
          path: tmp/artifacts
          merge-multiple: true

      - name: Load images to local Docker registry
        run: |
          for image_archive in tmp/artifacts/*.tar; do
            docker load --input "$image_archive"
          done
          docker images

      - name: Compile CLI
        if: ${{ inputs.taskfile-task == 'test:e2e:network' }}
        run: |
          task cli:compile

      - name: Run end-to-end tests
        env:
          IMAGE_REPO: ${{ inputs.image_repo }}
          IMAGE_TAG: ${{ inputs.image_tag }}
          E2E_COMPILE_OUTPUT_DIR: tmp
        run: |
          # Use a random cluster name to avoid conflicts in concurrent runs.
          # Kind cluster names must be lowercase and can contain only letters and numbers.
          export KIND_CLUSTER_NAME=test-$(openssl rand -base64 12 | tr -dc 'a-z0-9')
          task ${{ inputs.taskfile-task }}
