# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

name: Test

on:
  workflow_call:
    inputs:
      image_repo:
        required: true
        type: string
        description: 'Image repo to use.'
      image_tag:
        required: true
        type: string
        description: 'Image tag to use.'
      helm-version:
        required: false
        default: "3.12.1"
        type: string
        description: 'Helm version'
      # helm-ct-version:
      #   required: false
      #   default: "3.11.0"
      #   type: string
      #   description: 'Helm chart-testing version'
      kind-version:
        required: false
        default: "0.24.0"
        type: string
        description: 'Kind version'

permissions:
  id-token: write   # Required for OIDC token generation
  contents: read    # Required for repository access

jobs:
  test-unit:
    name: Unit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          check-latest: true
          cache-dependency-path: "**/*.sum"

      - name: Run unit tests
        run: |
          task test:unit

  test-e2e-local:
    name: End-to-end local
    uses: ./.github/workflows/reusable-test-e2e.yaml
    with:
      image_repo: ${{ inputs.image_repo }}
      image_tag: ${{ inputs.image_tag }}
      helm-version: ${{ inputs.helm-version }}
      kind-version: ${{ inputs.kind-version }}
      taskfile-task: "test:e2e:local"

  test-e2e-network:
    name: End-to-end network
    uses: ./.github/workflows/reusable-test-e2e.yaml
    with:
      image_repo: ${{ inputs.image_repo }}
      image_tag: ${{ inputs.image_tag }}
      helm-version: ${{ inputs.helm-version }}
      kind-version: ${{ inputs.kind-version }}
      taskfile-task: "test:e2e:network"

  # TODO: rely on native taskfile commands instead of rerunning the same setup steps
  test-sdks:
    name: SDKs test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          check-latest: true
          cache-dependency-path: "**/*.sum"

      - name: Setup Node env
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: https://registry.npmjs.org/
          scope: "@agntcy"

      - name: Setup Kind cluster
        shell: bash
        run: |
          # Create cluster config
          KIND_CONFIG_FILE=$(mktemp -p /tmp)
          cat <<EOF > $KIND_CONFIG_FILE
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          networking:
            apiServerAddress: "127.0.0.1"
            apiServerPort: 6443
          EOF

          # Create cluster
          kind create cluster --config $KIND_CONFIG_FILE --name kind
          kubectl cluster-info

      - name: Download artifacts
        uses: actions/download-artifact@v4.1.9
        with:
          path: tmp/artifacts
          merge-multiple: true

      - name: Load images to local Docker registry
        run: |
          for image_archive in tmp/artifacts/*.tar; do
            docker load --input "$image_archive"
          done
          docker images

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-packages-

      - name: Add dependencies for SDKs testing
        run: |
          CLIENT_ID="https://github.com/${{ github.repository }}/.github/workflows/reusable-test.yaml@${{ github.ref }}"

          task sdk:deps:common
          task sdk:deps:javascript
          task sdk:test-env:create

          task sdk:deps:cicd:iodc-token-generation CLIENT_ID=$CLIENT_ID >> $GITHUB_ENV

      - name: Test SDKs
        run: |
          task sdk:test:python
          task sdk:test:javascript
