# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:

permissions:
  contents: write
  packages: write
  id-token: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Create lint cache directory
        run: mkdir -p /tmp/.lint-cache

      - name: Setup lint cache
        uses: actions/cache@v4.2.3
        with:
          path: |
            /tmp/.lint-cache
          key: lint-cache-${{ runner.os }}-${{ hashFiles('**/*.sum') }}
          restore-keys: |
            lint-cache-${{ runner.os }}-

      - name: Lint Go
        run: |
          GOLANGCI_LINT_CACHE=/tmp/.lint-cache task lint:go

      - name: Lint Buf
        run: |
          task lint:buf

  license:
    name: License
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Setup license cache
        uses: actions/cache@v4.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: |
            **/.licensei.cache
          key: license-cache-${{ runner.os }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            license-cache-${{ runner.os }}-

      - name: License cache
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          task license:cache

      - name: License
        run: |
          task license

  verify-code:
    name: Verify Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Setup Taskfile
        shell: bash
        run: sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin

      - name: Check auto-generated code
        run: |
          task gen
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "There are uncommitted changes after running 'task gen'. Please commit these changes."
            exit 1
          fi

  build:
    name: Build
    needs:
      - lint
      - license
      - verify-code
    uses: ./.github/workflows/reusable-build.yaml
    with:
      image_repo: ghcr.io/agntcy
      image_tag: ${{ github.sha }}

  test:
    name: Test
    needs:
      - build
    uses: ./.github/workflows/reusable-test.yaml
    with:
      image_repo: ghcr.io/agntcy
      image_tag: ${{ github.sha }}

  release:
    name: Release
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs:
      - test
    uses: ./.github/workflows/reusable-release.yaml
    with:
      image_repo: ghcr.io/agntcy
      release_tag: ${{ github.ref_name }}

  integration:
    name: Run integration tests
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
        with:
          fetch-depth: 0

      - name: Run tests
        uses: ./.github/actions/trigger-integrations
        with:
          github-token: ${{ secrets.AGNTCY_BUILD_BOT_GH_TOKEN }}

  success:
    name: Success
    # https://github.com/actions/runner/issues/2566
    # https://github.com/actions/toolkit/issues/581
    if: ${{ !cancelled() && !contains(needs.*.result, 'cancelled') && !contains(needs.*.result, 'failure') }}
    needs:
      - test
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Echo Success
        run: echo "::notice Success!"
